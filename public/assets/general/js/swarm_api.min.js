class BcSwarmApi{constructor(e,t=null,s){this.apiBaseUrl=e,this.googleRecaptchSiteKeyView=t,this.debugMode=s,this.username=null,this.password=null,this.googleRecaptchaResponse=null,this.clientIp=null,this.getIp(),this.loginData=null,this.progressbarMoveForwardFunc=null,this.ridCounter=1,this.resetWebSocketData(),window.onbeforeunload=e=>{this.webSocketClose()},this.getInitialData()}setCredentials(e,t,s=null){this.isEmpty(e)||(this.username=e),this.isEmpty(t)||(this.password=t),this.isEmpty(s)||(this.googleRecaptchaResponse=s)}setProgressbarMoveForwardFunction(e=null){this.progressbarMoveForwardFunc=e}progressbarMoveForward(){try{null!=this.progressbarMoveForwardFunc&&this.progressbarMoveForwardFunc()}catch(e){this.log(e,!1,"error")}}isClientCredentialsExists(){return!this.isEmpty(this.username)&&!this.isEmpty(this.password)||(this.log("Error: Client credentials not exists.",!1,"error"),!1)}resetWebSocketData(){this.isWebSocketReady=!1,this.sessionData=null,this.wsResponses={}}getIp(){try{var e=e=>{this.log("Client IP: "+e.ip),this.clientIp=e.ip};fetch("https://api.ipify.org?format=json").then((e=>e.json())).then((t=>e(t)))}catch(e){this.log("Client IP error: \n"+e,!0,"debug")}}getServerConnection(e,t=null){var s=new ServerConnection(this.apiBaseUrl);return s.setSubUrl("bcswarm/"+e),s.setMethod("POST"),s.appendHeader("locale",locale),s.appendData("clientIP",this.clientIp),s.appendData("webSocketUrl",this.webSocketUrl),s.setOnFailed(function(e,s,r){var i=JSON.parse(e.responseText);this.progressbarMoveForward();var o="";if("string"==typeof i.message)o=i.message;else try{i.message.forEach((e=>{o+="* "+e+"\n"}))}catch(e){o=JSON.stringify(i.message,null,2)}"exception.CSRF token mismatch."==o&&window.location.reload(),null!=i.data&&!0===i.data.refreshPage&&window.location.reload(),this.log(o),null!=t&&t(o)}.bind(this)),s}getInitialData(){var e=this.getServerConnection("get_initial_data");e.setOnSuccess((e=>{var t=JSON.parse(e);this.progressbarMoveForward();var s=t.data;this.webSocketUrl=s.webSocketUrl,this.WebSocketUrlMain=s.webSocketUrl,this.WebSocketUrlAlternative=s.WebSocketUrlAlternative,this.siteId=s.siteId,this.language=s.language,this.webSocketOpen().then((()=>{}))})),e.connect()}isEmpty(e){return null==e||(null==e||""==e)}log(e,t=!1,s="info"){if(!this.isEmpty(e)){if(t)try{var r="";r="string"==typeof e||e instanceof String?e:JSON.stringify(e);var i=this.getServerConnection("log");i.appendData("type",s),i.appendData("message",r),i.connect()}catch(e){}if(this.debugMode)switch(s){case"info":case"notice":default:console.log(e);break;case"emergency":case"critical":case"error":case"debug":console.error(e);break;case"alert":case"warning":console.warn(e)}}}getSwarmErrorMessage(e,t){return new Promise(((s,r)=>{var i=this.getServerConnection("get_error_message",(e=>{r(e)}));i.appendData("commmand",JSON.stringify(e)),i.appendData("data",JSON.stringify(t)),i.setOnSuccess((e=>{var t=JSON.parse(e);this.progressbarMoveForward();var r=t.data;s(r.message)})),i.connect()}))}isWebSocketOpen(){return null!=this.webSocket&&null!=this.webSocket&&this.webSocket.readyState==WebSocket.OPEN}webSocketOpen(){return new Promise(((e,t)=>{this.isWebSocketOpen()&&e();try{this.isEmpty(this.webSocketUrl)?setTimeout((()=>{this.webSocketOpen().then(e,t)}),1e3):(this.webSocket=new WebSocket(this.webSocketUrl),this.webSocket.onopen=t=>{this.log("Websocket opened successfully."),this.progressbarMoveForward(),this.isWebSocketReady=!0,e()},this.webSocket.onmessage=e=>{var t=e.data,s=JSON.parse(t);this.log("New Response: \n"+t);var r=s.rid;this.isEmpty(r)||(this.wsResponses[r]=t)},this.webSocket.onerror=s=>{if(this.webSocketUrl==this.WebSocketUrlMain)this.webSocketUrl=this.WebSocketUrlAlternative,this.webSocketOpen().then(e,t);else{var r=JSON.stringify(s),i="error";['{"isTrusted":true}','{"isTrusted":false}'].includes(r)&&(i="warning"),this.log("webSocketOpen connection error: \n"+r,!0,i),t(s)}})}catch(e){this.log("webSocketOpen connection exception error: \n"+e,!0,"error"),this.resetWebSocketData(),t(e)}}))}webSocketClose(){this.resetWebSocketData(),this.isWebSocketOpen()&&this.webSocket.close(),this.log("Websocket closed successfully.")}webSocketRestart(){return new Promise(((e,t)=>{this.webSocketClose(),setTimeout((()=>{this.webSocketOpen().then(e,t)}),1e3)}))}getWebsocketResponse(e){return new Promise(((t,s)=>{var r=100,i=setInterval((()=>{try{this.isWebSocketOpen()||(this.log("getWebsocketResponse: Websocket was closed while waiting!",!0,"error"),clearInterval(i),window.location.reload());var o=this.wsResponses[e];null!=o?(this.log("RID "+e+" response: [Delay: "+(r/1e3).toFixed(2)+" s]\n"+o,!0),delete this.wsResponses[e],t(o),clearInterval(i)):(this.log("Waiting for RID "+e+" response."),r+=100)}catch(e){this.log("getWebsocketResponse Exception Error: \n"+e,!0,"error"),s(e),clearInterval(i)}}),100)}))}webSocketSend(e){return new Promise(((t,s)=>{try{if(this.isWebSocketOpen()&&this.isWebSocketReady){var r=this.ridCounter++;e.rid=r;var i=JSON.stringify(e);this.log("webSocketSend Sent: \n"+i,!0),this.webSocket.send(i),this.progressbarMoveForward();this.getWebsocketResponse(r).then((e=>{this.progressbarMoveForward();try{var r=JSON.parse(e);0==r.code?t(r.data):s(r)}catch(e){this.log("webSocketSend Error: \n"+e,!0,"error"),s(e)}}),s)}else{this.webSocketOpen().then((()=>{this.webSocketSend(e).then(t,s)}),s)}}catch(e){this.log("webSocketSend Exception Error: \n"+e,!0,"error"),s(e)}}))}requestSession(){return new Promise(((e,t)=>{var s={command:"request_session",params:{site_id:this.siteId,language:this.language}};this.webSocketSend(s).then((t=>{this.sessionData=t;var s=t.recaptcha_enabled;null!=this.googleRecaptchSiteKeyView&&s&&(this.googleRecaptchSiteKeyView.setAttribute("value",t.site_key),this.googleRecaptchSiteKeyView.value=t.site_key,this.googleRecaptchSiteKeyView.dispatchEvent(new Event("change"))),setTimeout((()=>{e(t)}),500)}),(r=>{if(558==r.code)if(null==this.sessionData){this.webSocketRestart().then((()=>{this.requestSession().then(e,t)}),t)}else e(this.sessionData);else this.getSwarmErrorMessage(s,r).then(t,t)}))}))}requestLogin(e,t,s){return this.username=e,this.password=t,new Promise(((r,i)=>{var o={command:"login",params:{username:e,password:t}};if(this.isEmpty(s)||(o.params.g_recaptcha_response=s),this.isEmpty(this.sessionData)){this.requestSession().then((()=>{this.requestLogin(e,t,s).then(r,i)}),i)}else{this.webSocketSend(o).then((e=>{this.loginData=e,r(e)}),(n=>{if(5==n.code){this.webSocketRestart().then((()=>{this.requestLogin(e,t,s).then(r,i)}),i)}else this.getSwarmErrorMessage(o,n).then(i,i)}))}}))}requestGetUser(){return new Promise(((e,t)=>{if(this.isClientCredentialsExists()){var s={command:"get_user",params:{}};if(this.isEmpty(this.loginData)){this.requestLogin(this.username,this.password,this.googleRecaptchaResponse).then((()=>{this.requestGetUser().then(e,t)}),t)}else{this.webSocketSend(s).then((t=>{e(t)}),(r=>{if(12==r.code){this.webSocketRestart().then((()=>{this.requestGetUser().then(e,t)}),t)}else this.getSwarmErrorMessage(s,r).then(t,t)}))}}else t("")}))}}
